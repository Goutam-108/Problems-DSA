#include<bits/stdc++.h>
using namespace std;
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res ;
        int n = nums.size();
        sort(nums.begin(),nums.end());
        for(int i=0;i<n-2;i++)
        {
            if(i>0 && nums[i]==nums[i-1])
                continue;

            int left = i+1;
            int right = n-1;
            while(left < right)
            {
                int sum = nums[i] + nums[left] + nums[right];
                if(sum == 0)
                {
                    res.push_back({nums[i], nums[left], nums[right]});
                    while(nums[left] == nums[left+1]) left++;
                    while(nums[right] == nums[right+1]) right--;
                    left++;
                    right--;
                }
                else if(sum < 0)
                    left++;
                else
                    right--;
            }
        }
        return res;
    }
};
int main()
{
    Solution obj ;
    vector<int> nums = {-4,-1,0,-1,1,2};
    vector<vector<int>> ans = obj.threeSum(nums);
    for(auto triplet : ans)
    {
        for(auto it:triplet)
        {
        cout<<it<<" " ;
        }
        cout<<endl;
    }
    return 0;
}
